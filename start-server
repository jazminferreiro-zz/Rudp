#!/usr/bin/env python3
import argparse
import select
import sys
import threading
import time

from model import Server
from model.tcp.TcpServer import TcpServer
from model.udp.UdpServer import UdpServer


def parse_arguments():
  parser = argparse.ArgumentParser()

  parser.add_argument("-H", "--own-host", default="127.0.0.1", help="la dirección IP que el servidor estará escuchando")
  parser.add_argument("-P", "--own-port", type=int, default=8080, help="el puerto que el servidor estará escuchando")
  parser.add_argument("-s", "--storage-dir", help="directorio donde se guardarán los archivos enviados por los clientes y donde se buscarán aquellos que quieran ser descargados", required=True)
  parser.add_argument("-p", "--protocol", help="el protocolo a utilizar para la comunicación", default="tcp", choices=['tcp', 'udp'])

  return parser.parse_args()



def start_server(server: Server):
  server.start_listenning()
  c = None
  while not c:
    c = select.select([sys.stdin], [], [], 1)[0]
  server.stop_running()



def main():
  args = parse_arguments()
  server_address = (args.own_host, args.own_port)

  if args.protocol == "tcp":
    server = TcpServer(server_address, args.storage_dir)
    start_server(server)
  elif args.protocol == "udp":
    server = UdpServer(server_address, args.storage_dir)
    start_server(server)
  else:
    raise Exception("protocolo invalido")

main()


